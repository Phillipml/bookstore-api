name: CI/CD Pipeline
on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Configurar Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Instalar Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Instalar dependências
      run: poetry install --no-interaction --no-ansi
      
    - name: Configurar variáveis de ambiente para CI
      run: |
        echo "SECRET_KEY=django-insecure-ci-test-key-not-for-production" >> $GITHUB_ENV
        echo "DEBUG=0" >> $GITHUB_ENV
        echo "DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1" >> $GITHUB_ENV
        echo "SQL_ENGINE=django.db.backends.sqlite3" >> $GITHUB_ENV
        echo "SQL_DATABASE=db.sqlite3" >> $GITHUB_ENV
        echo "SQL_USER=user" >> $GITHUB_ENV
        echo "SQL_PASSWORD=password" >> $GITHUB_ENV
        echo "SQL_HOST=localhost" >> $GITHUB_ENV
        echo "SQL_PORT=5432" >> $GITHUB_ENV
      
    - name: Executar migrações
      run: poetry run python manage.py migrate --noinput
      
    - name: Executar testes
      run: poetry run pytest
      
    - name: Verificar formatação do código
      run: poetry run black --check .
      
    - name: Verificar sintaxe Python
      run: poetry run python -m py_compile manage.py
